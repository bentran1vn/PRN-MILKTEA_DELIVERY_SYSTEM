@page
@model RazorPages.Pages.OrderHistory

@{
    Layout = "Shared/_AdminLayout";
}

<!DOCTYPE html>

<html>
<head>
    <title>Order Histories</title>
</head>
<body>
<div>
    <h2 class="mb-4 ml-2">Order History</h2>
    <table class="table table-striped table-bordered">
        <thead class="thead-dark">
        <tr>
            <th>OrderId</th>
            <th>Username</th>
            <th>TotalMoney</th>
            <th>Shipper Name</th>
            <th>Created At</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody id="orderHistoryList">
                @foreach (var item in Model.Order)
                {
                    <tr>
                        <td>@item.orderID</td>
                        <td>@item.Users?.userName</td>
                        <td>@item.total</td>
                        <td>@item.Shippers?.userName</td>
                        <td>@item.create_At</td>
                        <td>
                            <a asp-page="./OrderDetailHistory" asp-route-id="@item.orderID" class="btn btn-info btn-sm">Detail</a>


                    </tr>
                }
        </tbody>
    </table>
</div>
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= 6; i++)
            {
                <li class="page-item @(i == 1 ? "active" : "")">
                    <a class="page-link" >@i</a>
                </li>
            }
        </ul>
    </nav>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.11/signalr.min.js"></script>
<script type="text/javascript">
        const connection = new signalR.HubConnectionBuilder()
        .withUrl("/signalrServer")
        .withAutomaticReconnect() // Automatically attempt to reconnect if the connection is lost
        .configureLogging(signalR.LogLevel.Information)
        .withHubProtocol(new signalR.JsonHubProtocol())
        .build();

        connection.serverTimeoutInMilliseconds = 60000;
            
        console.log(connection);

        connection.on("NewOrder", function () {
            location.reload();
        });

        connection.on("NewStatus", function () {
            location.reload();
        });

        connection.start().catch(function (err) {
            return console.error(err.toString());
        });
    </script>
</body>
</html>
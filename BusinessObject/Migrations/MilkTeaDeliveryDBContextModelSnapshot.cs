// <auto-generated />
using System;
using BusinessObject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessObject.Migrations
{
    [DbContext(typeof(MilkTeaDeliveryDBContext))]
    partial class MilkTeaDeliveryDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObject.Entities.FeedBack", b =>
                {
                    b.Property<int>("feedBackID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("feedBackID"));

                    b.Property<Guid>("OrderDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("create_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("create_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("delete_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("delete_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("point")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("update_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("update_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("feedBackID");

                    b.HasIndex("OrderDetailId")
                        .IsUnique();

                    b.HasIndex("userID");

                    b.ToTable("FeedBacks");
                });

            modelBuilder.Entity("BusinessObject.Entities.Order", b =>
                {
                    b.Property<Guid>("orderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("create_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("create_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("delete_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("delete_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shipperID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<double>("total")
                        .HasColumnType("float");

                    b.Property<DateTime?>("update_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("update_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("voucherID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("orderID");

                    b.HasIndex("shipperID");

                    b.HasIndex("userID");

                    b.HasIndex("voucherID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            orderID = new Guid("11111111-1111-1111-1111-111111111111"),
                            note = "notenote",
                            shipperID = "123125",
                            status = 1,
                            total = 1000000.0,
                            userID = "123123"
                        },
                        new
                        {
                            orderID = new Guid("22222222-2222-2222-2222-222222222222"),
                            note = "notenote",
                            shipperID = "123125",
                            status = 1,
                            total = 1500000.0,
                            userID = "123123"
                        },
                        new
                        {
                            orderID = new Guid("33333333-3333-3333-3333-333333333333"),
                            note = "notenote",
                            shipperID = "123125",
                            status = 1,
                            total = 1500000.0,
                            userID = "123126"
                        });
                });

            modelBuilder.Entity("BusinessObject.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("orderID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("productID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("orderID");

                    b.HasIndex("productID");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b411070e-8783-4d1f-8e36-56ea7516b791"),
                            note = "Note",
                            orderID = new Guid("11111111-1111-1111-1111-111111111111"),
                            productID = "product1",
                            quantity = 1
                        },
                        new
                        {
                            Id = new Guid("315e92b4-4b71-4088-8b0c-010423cfed7a"),
                            note = "Note",
                            orderID = new Guid("11111111-1111-1111-1111-111111111111"),
                            productID = "product2",
                            quantity = 1
                        },
                        new
                        {
                            Id = new Guid("fb6a2bca-6514-4125-9841-8ed51280c1b5"),
                            note = "Note",
                            orderID = new Guid("11111111-1111-1111-1111-111111111111"),
                            productID = "product3",
                            quantity = 1
                        },
                        new
                        {
                            Id = new Guid("d7dab0cf-1e3a-4f47-b708-e7be12df8524"),
                            note = "Note",
                            orderID = new Guid("11111111-1111-1111-1111-111111111111"),
                            productID = "product4",
                            quantity = 1
                        },
                        new
                        {
                            Id = new Guid("f93cfa7e-dc69-4457-83ba-8d9d6936c25d"),
                            note = "Note",
                            orderID = new Guid("33333333-3333-3333-3333-333333333333"),
                            productID = "product3",
                            quantity = 1
                        },
                        new
                        {
                            Id = new Guid("1eff3af9-3c22-475e-a1fa-a72cfa8b611d"),
                            note = "Note",
                            orderID = new Guid("33333333-3333-3333-3333-333333333333"),
                            productID = "product4",
                            quantity = 1
                        },
                        new
                        {
                            Id = new Guid("c8aefaae-2cb3-41dc-b016-07a965e5fe31"),
                            note = "Note",
                            orderID = new Guid("33333333-3333-3333-3333-333333333333"),
                            productID = "product6",
                            quantity = 1
                        },
                        new
                        {
                            Id = new Guid("339c3c10-f480-4222-93b5-989819882122"),
                            note = "Note",
                            orderID = new Guid("22222222-2222-2222-2222-222222222222"),
                            productID = "product5",
                            quantity = 1
                        },
                        new
                        {
                            Id = new Guid("2d11a9bb-92c6-4fae-a055-8583376aa0f8"),
                            note = "Note",
                            orderID = new Guid("22222222-2222-2222-2222-222222222222"),
                            productID = "product6",
                            quantity = 1
                        },
                        new
                        {
                            Id = new Guid("37d8e706-316f-47f3-9c25-4ce99bb3df9f"),
                            note = "Note",
                            orderID = new Guid("22222222-2222-2222-2222-222222222222"),
                            productID = "product7",
                            quantity = 1
                        },
                        new
                        {
                            Id = new Guid("7c7dd2a1-275a-4973-a18b-e661f570deab"),
                            note = "Note",
                            orderID = new Guid("22222222-2222-2222-2222-222222222222"),
                            productID = "product8",
                            quantity = 1
                        });
                });

            modelBuilder.Entity("BusinessObject.Entities.Product", b =>
                {
                    b.Property<string>("ProductID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imgs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = "product1",
                            Imgs = "image1.jpg",
                            Price = 100000.0,
                            ProductDescription = "Trà Sữa Đài Loan rất là ngon",
                            ProductName = "Trà sữa đài loan",
                            ProductType = 0,
                            Quantity = 100,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product2",
                            Imgs = "image2.jpg",
                            Price = 90000.0,
                            ProductDescription = "Trà Sữa Thái hương vị độc đáo",
                            ProductName = "Trà sữa Thái",
                            ProductType = 1,
                            Quantity = 120,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product3",
                            Imgs = "image3.jpg",
                            Price = 80000.0,
                            ProductDescription = "Hương vị tươi mới và sảng khoái",
                            ProductName = "Trà đào cam sả",
                            ProductType = 1,
                            Quantity = 150,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product4",
                            Imgs = "image4.jpg",
                            Price = 110000.0,
                            ProductDescription = "Vị trà xanh thanh mát",
                            ProductName = "Trà sữa Matcha",
                            ProductType = 2,
                            Quantity = 90,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product5",
                            Imgs = "image5.jpg",
                            Price = 120000.0,
                            ProductDescription = "Hương vị Nhật Bản độc đáo",
                            ProductName = "Trà sữa Hokkaido",
                            ProductType = 2,
                            Quantity = 80,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product6",
                            Imgs = "image6.jpg",
                            Price = 115000.0,
                            ProductDescription = "Hương vị trà sữa đậm đà",
                            ProductName = "Trà sữa Okinawa",
                            ProductType = 2,
                            Quantity = 70,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product7",
                            Imgs = "image7.jpg",
                            Price = 95000.0,
                            ProductDescription = "Vị dâu tây thơm ngon",
                            ProductName = "Trà sữa dâu tây",
                            ProductType = 1,
                            Quantity = 110,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product8",
                            Imgs = "image8.jpg",
                            Price = 105000.0,
                            ProductDescription = "Hương vị socola béo ngậy",
                            ProductName = "Trà sữa socola",
                            ProductType = 0,
                            Quantity = 100,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product9",
                            Imgs = "image9.jpg",
                            Price = 95000.0,
                            ProductDescription = "Hương vị caramel ngọt ngào",
                            ProductName = "Trà sữa caramel",
                            ProductType = 0,
                            Quantity = 130,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product10",
                            Imgs = "image10.jpg",
                            Price = 90000.0,
                            ProductDescription = "Hương vị bạc hà mát lạnh",
                            ProductName = "Trà sữa bạc hà",
                            ProductType = 1,
                            Quantity = 140,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product11",
                            Imgs = "image11.jpg",
                            Price = 85000.0,
                            ProductDescription = "Hương vị nhãn thanh ngọt",
                            ProductName = "Trà sữa vị nhãn",
                            ProductType = 1,
                            Quantity = 150,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product12",
                            Imgs = "image12.jpg",
                            Price = 88000.0,
                            ProductDescription = "Hương vị vải thanh mát",
                            ProductName = "Trà sữa vị vải",
                            ProductType = 0,
                            Quantity = 120,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product13",
                            Imgs = "image13.jpg",
                            Price = 93000.0,
                            ProductDescription = "Hương vị dưa lưới thanh mát",
                            ProductName = "Trà sữa vị dưa lưới",
                            ProductType = 0,
                            Quantity = 130,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product14",
                            Imgs = "image14.jpg",
                            Price = 90000.0,
                            ProductDescription = "Hương vị táo ngọt ngào",
                            ProductName = "Trà sữa vị táo",
                            ProductType = 0,
                            Quantity = 110,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product15",
                            Imgs = "image15.jpg",
                            Price = 89000.0,
                            ProductDescription = "Hương vị dứa nhiệt đới",
                            ProductName = "Trà sữa vị dứa",
                            ProductType = 1,
                            Quantity = 140,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product16",
                            Imgs = "image16.jpg",
                            Price = 92000.0,
                            ProductDescription = "Hương vị xoài nhiệt đới",
                            ProductName = "Trà sữa vị xoài",
                            ProductType = 1,
                            Quantity = 125,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product17",
                            Imgs = "image17.jpg",
                            Price = 98000.0,
                            ProductDescription = "Hương vị nho ngọt ngào",
                            ProductName = "Trà sữa vị nho",
                            ProductType = 2,
                            Quantity = 115,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product18",
                            Imgs = "image18.jpg",
                            Price = 97000.0,
                            ProductDescription = "Hương vị dừa béo ngậy",
                            ProductName = "Trà sữa vị dừa",
                            ProductType = 2,
                            Quantity = 135,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product19",
                            Imgs = "image19.jpg",
                            Price = 94000.0,
                            ProductDescription = "Hương vị chanh dây thanh mát",
                            ProductName = "Trà sữa vị chanh dây",
                            ProductType = 1,
                            Quantity = 120,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product20",
                            Imgs = "image20.jpg",
                            Price = 130000.0,
                            ProductDescription = "Hương vị sầu riêng độc đáo",
                            ProductName = "Trà sữa vị sầu riêng",
                            ProductType = 2,
                            Quantity = 100,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product21",
                            Imgs = "image21.jpg",
                            Price = 85000.0,
                            ProductDescription = "Hương vị đào thanh mát",
                            ProductName = "Trà sữa vị đào",
                            ProductType = 0,
                            Quantity = 140,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product22",
                            Imgs = "image22.jpg",
                            Price = 89000.0,
                            ProductDescription = "Hương vị kiwi thanh mát",
                            ProductName = "Trà sữa vị kiwi",
                            ProductType = 0,
                            Quantity = 130,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product23",
                            Imgs = "image23.jpg",
                            Price = 92000.0,
                            ProductDescription = "Hương vị cam tươi mát",
                            ProductName = "Trà sữa vị cam",
                            ProductType = 1,
                            Quantity = 125,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product24",
                            Imgs = "image24.jpg",
                            Price = 95000.0,
                            ProductDescription = "Hương vị bưởi thanh mát",
                            ProductName = "Trà sữa vị bưởi",
                            ProductType = 1,
                            Quantity = 110,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product25",
                            Imgs = "image25.jpg",
                            Price = 98000.0,
                            ProductDescription = "Hương vị mâm xôi ngọt ngào",
                            ProductName = "Trà sữa vị mâm xôi",
                            ProductType = 2,
                            Quantity = 135,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product26",
                            Imgs = "image26.jpg",
                            Price = 99000.0,
                            ProductDescription = "Hương vị cherry ngọt ngào",
                            ProductName = "Trà sữa vị cherry",
                            ProductType = 2,
                            Quantity = 115,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product27",
                            Imgs = "image27.jpg",
                            Price = 90000.0,
                            ProductDescription = "Hương vị dâu rừng thanh mát",
                            ProductName = "Trà sữa vị dâu rừng",
                            ProductType = 0,
                            Quantity = 140,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product28",
                            Imgs = "image28.jpg",
                            Price = 91000.0,
                            ProductDescription = "Hương vị lê thanh mát",
                            ProductName = "Trà sữa vị lê",
                            ProductType = 0,
                            Quantity = 120,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product29",
                            Imgs = "image29.jpg",
                            Price = 92000.0,
                            ProductDescription = "Hương vị chuối béo ngậy",
                            ProductName = "Trà sữa vị chuối",
                            ProductType = 1,
                            Quantity = 115,
                            Status = true
                        },
                        new
                        {
                            ProductID = "product30",
                            Imgs = "image30.jpg",
                            Price = 93000.0,
                            ProductDescription = "Hương vị dâu tây ngọt ngào",
                            ProductName = "Trà sữa vị dâu tây",
                            ProductType = 1,
                            Quantity = 130,
                            Status = true
                        });
                });

            modelBuilder.Entity("BusinessObject.Entities.Rank", b =>
                {
                    b.Property<int>("rankID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rankID"));

                    b.Property<DateTime?>("create_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("create_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("delete_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("delete_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("update_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("update_By")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("rankID");

                    b.ToTable("Ranks");

                    b.HasData(
                        new
                        {
                            rankID = 1,
                            description = "kakak",
                            rankName = "RanhCOn"
                        },
                        new
                        {
                            rankID = 2,
                            description = "kakak",
                            rankName = "RanhCha"
                        },
                        new
                        {
                            rankID = 3,
                            description = "kakak",
                            rankName = "RanhMom"
                        });
                });

            modelBuilder.Entity("BusinessObject.Entities.Role", b =>
                {
                    b.Property<int>("roleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("roleID"));

                    b.Property<DateTime?>("create_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("create_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("delete_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("delete_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("update_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("update_By")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("roleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            roleID = 1,
                            description = "User",
                            roleName = "User"
                        },
                        new
                        {
                            roleID = 2,
                            description = "Admin",
                            roleName = "Admin"
                        },
                        new
                        {
                            roleID = 3,
                            description = "Shipper",
                            roleName = "Shipper"
                        });
                });

            modelBuilder.Entity("BusinessObject.Entities.User", b =>
                {
                    b.Property<string>("userID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("create_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("create_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("delete_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("delete_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("point")
                        .HasColumnType("int");

                    b.Property<int>("rankID")
                        .HasColumnType("int");

                    b.Property<int>("roleID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("update_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("update_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("yob")
                        .HasColumnType("datetime2");

                    b.HasKey("userID");

                    b.HasIndex("rankID");

                    b.HasIndex("roleID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            userID = "123123",
                            address = "BienHoa",
                            email = "email@gmail.com",
                            password = "123123123",
                            phoneNumber = "1231231231",
                            point = 100,
                            rankID = 1,
                            roleID = 1,
                            userName = "user1",
                            yob = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            userID = "123126",
                            address = "BienHoa",
                            email = "email@gmail.com",
                            password = "123123123",
                            phoneNumber = "1231231231",
                            point = 100,
                            rankID = 1,
                            roleID = 1,
                            userName = "user6",
                            yob = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            userID = "123124",
                            address = "BienHoa",
                            email = "email@gmail.com",
                            password = "123123123",
                            phoneNumber = "1231231231",
                            point = 100,
                            rankID = 1,
                            roleID = 2,
                            userName = "user4",
                            yob = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            userID = "123125",
                            address = "BienHoa",
                            email = "email@gmail.com",
                            password = "123123123",
                            phoneNumber = "1231231231",
                            point = 100,
                            rankID = 1,
                            roleID = 3,
                            userName = "user5",
                            yob = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("BusinessObject.Entities.Voucher", b =>
                {
                    b.Property<string>("voucherID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("amount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("create_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("create_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("delete_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("delete_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("max")
                        .HasColumnType("float");

                    b.Property<double>("min")
                        .HasColumnType("float");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("update_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("update_By")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("voucherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("voucherID");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("BusinessObject.Entities.FeedBack", b =>
                {
                    b.HasOne("BusinessObject.Entities.OrderDetail", "OrderDetail")
                        .WithOne()
                        .HasForeignKey("BusinessObject.Entities.FeedBack", "OrderDetailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BusinessObject.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderDetail");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BusinessObject.Entities.Order", b =>
                {
                    b.HasOne("BusinessObject.Entities.User", "Shippers")
                        .WithMany()
                        .HasForeignKey("shipperID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessObject.Entities.User", "Users")
                        .WithMany("Orders")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BusinessObject.Entities.Voucher", "Vouchers")
                        .WithMany("Orders")
                        .HasForeignKey("voucherID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Shippers");

                    b.Navigation("Users");

                    b.Navigation("Vouchers");
                });

            modelBuilder.Entity("BusinessObject.Entities.OrderDetail", b =>
                {
                    b.HasOne("BusinessObject.Entities.Order", "Orders")
                        .WithMany()
                        .HasForeignKey("orderID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BusinessObject.Entities.Product", "Products")
                        .WithMany()
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("BusinessObject.Entities.User", b =>
                {
                    b.HasOne("BusinessObject.Entities.Rank", "Ranks")
                        .WithMany("Users")
                        .HasForeignKey("rankID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BusinessObject.Entities.Role", "Roles")
                        .WithMany("Users")
                        .HasForeignKey("roleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ranks");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("BusinessObject.Entities.Rank", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BusinessObject.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BusinessObject.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BusinessObject.Entities.Voucher", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
